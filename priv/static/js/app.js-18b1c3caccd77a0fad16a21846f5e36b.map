{"version":3,"sources":["phoenix.js","phoenix_html.js","socket.js"],"names":[],"mappings":"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","file":"priv/static/js/app.js","sourcesContent":["// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are mulitplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"rooms:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Joining a channel with `channel.join(topic, params)`, binds the params to\n// `channel.params`. Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attemtped\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n\nconst VSN = \"1.0.0\"\nconst SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nconst DEFAULT_TIMEOUT = 10000\nconst CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n}\nconst CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\nconst TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\n\nclass Push {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n  constructor(channel, event, payload, timeout){\n    this.channel      = channel\n    this.event        = event\n    this.payload      = payload || {}\n    this.receivedResp = null\n    this.timeout      = timeout\n    this.timeoutTimer = null\n    this.recHooks     = []\n    this.sent         = false\n  }\n\n  resend(timeout){\n    this.timeout = timeout\n    this.cancelRefEvent()\n    this.ref          = null\n    this.refEvent     = null\n    this.receivedResp = null\n    this.sent         = false\n    this.send()\n  }\n\n  send(){ if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref\n    })\n  }\n\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n\n  // private\n\n  matchReceive({status, response, ref}){\n    this.recHooks.filter( h => h.status === status )\n                 .forEach( h => h.callback(response) )\n  }\n\n  cancelRefEvent(){ if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  startTimeout(){ if(this.timeoutTimer){ return }\n    this.ref      = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n\nexport class Channel {\n  constructor(topic, params, socket) {\n    this.state       = CHANNEL_STATES.closed\n    this.topic       = topic\n    this.params      = params || {}\n    this.socket      = socket\n    this.bindings    = []\n    this.timeout     = this.socket.timeout\n    this.joinedOnce  = false\n    this.joinPush    = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer  = []\n    this.rejoinTimer  = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach( pushEvent => pushEvent.send() )\n      this.pushBuffer = []\n    })\n    this.onClose( () => {\n      this.socket.log(\"channel\", `close ${this.topic}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError( reason => {\n      this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.setTimeout()\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.state !== CHANNEL_STATES.joining){ return }\n\n      this.socket.log(\"channel\", `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.setTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected(){\n    this.rejoinTimer.setTimeout()\n    if(this.socket.isConnected()){\n      this.rejoin()\n    }\n  }\n\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw(`tried to join multiple times. 'join' can only be called a single time per channel instance`)\n    } else {\n      this.joinedOnce = true\n    }\n    this.rejoin(timeout)\n    return this.joinPush\n  }\n\n  onClose(callback){ this.on(CHANNEL_EVENTS.close, callback) }\n\n  onError(callback){\n    this.on(CHANNEL_EVENTS.error, reason => callback(reason) )\n  }\n\n  on(event, callback){ this.bindings.push({event, callback}) }\n\n  off(event){ this.bindings = this.bindings.filter( bind => bind.event !== event ) }\n\n  canPush(){ return this.socket.isConnected() && this.state === CHANNEL_STATES.joined }\n\n  push(event, payload, timeout = this.timeout){\n    if(!this.joinedOnce){\n      throw(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  // Leaves the channel\n  //\n  // Unsubscribes from server events, and\n  // instructs channel to terminate on server\n  //\n  // Triggers onClose() hooks\n  //\n  // To receive leave acknowledgements, use the a `receive`\n  // hook to bind to the server ack, ie:\n  //\n  //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n  //\n  leave(timeout = this.timeout){\n    let onClose = () => {\n      this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive(\"ok\", () => onClose() )\n             .receive(\"timeout\", () => onClose() )\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  // Overridable message hook\n  //\n  // Receives all events for specialized message handling\n  onMessage(event, payload, ref){}\n\n  // private\n\n  isMember(topic){ return this.topic === topic }\n\n  sendJoin(timeout){\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  rejoin(timeout = this.timeout){ this.sendJoin(timeout) }\n\n  trigger(triggerEvent, payload, ref){\n    this.onMessage(triggerEvent, payload, ref)\n    this.bindings.filter( bind => bind.event === triggerEvent )\n                 .map( bind => bind.callback(payload, ref) )\n  }\n\n  replyEventName(ref){ return `chan_reply_${ref}` }\n}\n\nexport class Socket {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels             = []\n    this.sendBuffer           = []\n    this.ref                  = 0\n    this.timeout              = opts.timeout || DEFAULT_TIMEOUT\n    this.transport            = opts.transport || window.WebSocket || LongPoll\n    this.heartbeatIntervalMs  = opts.heartbeatIntervalMs || 30000\n    this.reconnectAfterMs     = opts.reconnectAfterMs || function(tries){\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000\n    }\n    this.logger               = opts.logger || function(){} // noop\n    this.longpollerTimeout    = opts.longpollerTimeout || 20000\n    this.params               = opts.params || {}\n    this.endPoint             = `${endPoint}/${TRANSPORTS.websocket}`\n    this.reconnectTimer       = new Timer(() => {\n      this.disconnect(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params), {vsn: VSN})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  disconnect(callback, code, reason){\n    if(this.conn){\n      this.conn.onclose = function(){} // noop\n      if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      this.conn = null\n    }\n    callback && callback()\n  }\n\n  // params - The params to send when connecting, for example `{user_id: userToken}`\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = params\n    }\n    if(this.conn){ return }\n\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.timeout   = this.longpollerTimeout\n    this.conn.onopen    = () => this.onConnOpen()\n    this.conn.onerror   = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose   = event => this.onConnClose(event)\n  }\n\n  // Logs the message. Override `this.logger` for specialized logging. noops by default\n  log(kind, msg, data){ this.logger(kind, msg, data) }\n\n  // Registers callbacks for connection state change events\n  //\n  // Examples\n  //\n  //    socket.onError(function(error){ alert(\"An error occurred\") })\n  //\n  onOpen     (callback){ this.stateChangeCallbacks.open.push(callback) }\n  onClose    (callback){ this.stateChangeCallbacks.close.push(callback) }\n  onError    (callback){ this.stateChangeCallbacks.error.push(callback) }\n  onMessage  (callback){ this.stateChangeCallbacks.message.push(callback) }\n\n  onConnOpen(){\n    this.log(\"transport\", `connected to ${this.endPointURL()}`, this.transport.prototype)\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    if(!this.conn.skipHeartbeat){\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n    }\n    this.stateChangeCallbacks.open.forEach( callback => callback() )\n  }\n\n  onConnClose(event){\n    this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.setTimeout()\n    this.stateChangeCallbacks.close.forEach( callback => callback(event) )\n  }\n\n  onConnError(error){\n    this.log(\"transport\", error)\n    this.triggerChanError()\n    this.stateChangeCallbacks.error.forEach( callback => callback(error) )\n  }\n\n  triggerChanError(){\n    this.channels.forEach( channel => channel.trigger(CHANNEL_EVENTS.error) )\n  }\n\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open:       return \"open\"\n      case SOCKET_STATES.closing:    return \"closing\"\n      default:                       return \"closed\"\n    }\n  }\n\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  remove(channel){\n    this.channels = this.channels.filter( c => !c.isMember(channel.topic) )\n  }\n\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  push(data){\n    let {topic, event, payload, ref} = data\n    let callback = () => this.conn.send(JSON.stringify(data))\n    this.log(\"push\", `${topic} ${event} (${ref})`, payload)\n    if(this.isConnected()){\n      callback()\n    }\n    else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  // Return the next message ref, accounting for overflows\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){ if(!this.isConnected()){ return }\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef()})\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach( callback => callback() )\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    let msg = JSON.parse(rawMessage.data)\n    let {topic, event, payload, ref} = msg\n    this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n    this.channels.filter( channel => channel.isMember(topic) )\n                 .forEach( channel => channel.trigger(event, payload, ref) )\n    this.stateChangeCallbacks.message.forEach( callback => callback(msg) )\n  }\n}\n\n\nexport class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint        = null\n    this.token           = null\n    this.skipHeartbeat   = true\n    this.onopen          = function(){} // noop\n    this.onerror         = function(){} // noop\n    this.onmessage       = function(){} // noop\n    this.onclose         = function(){} // noop\n    this.pollEndpoint    = this.normalizeEndpoint(endPoint)\n    this.readyState      = SOCKET_STATES.connecting\n\n    this.poll()\n  }\n\n  normalizeEndpoint(endPoint){\n    return(endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(){\n    this.close()\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry()\n  }\n\n  poll(){\n    if(!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)){ return }\n\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else{\n        var status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach( msg => this.onmessage({data: JSON.stringify(msg)}) )\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen()\n          this.poll()\n          break\n        case 0:\n        case 500:\n          this.onerror()\n          this.closeAndRetry()\n          break\n        default: throw(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  send(body){\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if(!resp || resp.status !== 200){\n        this.onerror(status)\n        this.closeAndRetry()\n      }\n    })\n  }\n\n  close(code, reason){\n    this.readyState = SOCKET_STATES.closed\n    this.onclose()\n  }\n}\n\n\nexport class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(window.XDomainRequest){\n      let req = new XDomainRequest() // IE8, IE9\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = window.XMLHttpRequest ?\n                  new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n                  new ActiveXObject(\"Microsoft.XMLHTTP\") // IE6, IE5\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => {}\n\n    req.send(body)\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint, true)\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => { callback && callback(null) }\n    req.onreadystatechange = () => {\n      if(req.readyState === this.states.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n  }\n\n  static parseJSON(resp){\n    return (resp && resp !== \"\") ?\n             JSON.parse(resp) :\n             null\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = [];\n    for(var key in obj){ if(!obj.hasOwnProperty(key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n\nAjax.states = {complete: 4}\n\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.setTimeout() // fires after 1000\n//    reconnectTimer.setTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.setTimeout() // fires after 1000\n//\nclass Timer {\n  constructor(callback, timerCalc){\n    this.callback  = callback\n    this.timerCalc = timerCalc\n    this.timer     = null\n    this.tries     = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous setTimeout and schedules callback\n  setTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","// Although ^=parent is not technically correct,\n// we need to use it in order to get IE8 support.\nvar elements = document.querySelectorAll('[data-submit^=parent]')\nvar len = elements.length\n\nfor (var i=0; i<len; ++i) {\n  elements[i].addEventListener('click', function(event){\n    var message = this.getAttribute(\"data-confirm\")\n    if(message === null || confirm(message)){\n      this.parentNode.submit()\n    };\n    event.preventDefault()\n    return false\n  }, false)\n}\n","// NOTE: The contents of this file will only be executed if\n// you uncomment its entry in \"web/static/js/app.js\".\n\n// To use Phoenix channels, the first step is to import Socket\n// and connect at the socket path in \"lib/my_app/endpoint.ex\":\nimport {Socket} from \"deps/phoenix/web/static/js/phoenix\"\n\nlet socket = new Socket(\"/socket\", {params: {token: window.userToken}})\n\n// When you connect, you'll often need to authenticate the client.\n// For example, imagine you have an authentication plug, `MyAuth`,\n// which authenticates the session and assigns a `:current_user`.\n// If the current user exists you can assign the user's token in\n// the connection for use in the layout.\n//\n// In your \"web/router.ex\":\n//\n//     pipeline :browser do\n//       ...\n//       plug MyAuth\n//       plug :put_user_token\n//     end\n//\n//     defp put_user_token(conn, _) do\n//       if current_user = conn.assigns[:current_user] do\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\n//         assign(conn, :user_token, token)\n//       else\n//         conn\n//       end\n//     end\n//\n// Now you need to pass this token to JavaScript. You can do so\n// inside a script tag in \"web/templates/layout/app.html.eex\":\n//\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\n//\n// You will need to verify the user token in the \"connect/2\" function\n// in \"web/channels/user_socket.ex\":\n//\n//     def connect(%{\"token\" => token}, socket) do\n//       # max_age: 1209600 is equivalent to two weeks in seconds\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1209600) do\n//         {:ok, user_id} ->\n//           {:ok, assign(socket, :user, user_id)}\n//         {:error, reason} ->\n//           :error\n//       end\n//     end\n//\n// Finally, pass the token on connect as below. Or remove it\n// from connect if you don't care about authentication.\n\nsocket.connect()\n\n// Now that you are connected, you can join channels with a topic:\nlet channel = socket.channel(\"topic:subtopic\", {})\nchannel.join()\n  .receive(\"ok\", resp => { console.log(\"Joined successfully\", resp) })\n  .receive(\"error\", resp => { console.log(\"Unable to join\", resp) })\n\nexport default socket\n"]}